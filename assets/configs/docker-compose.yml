version: '3.8'

services:
  # PostgreSQL databáza
  postgres:
    image: postgres:15-alpine
    container_name: blackrent-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: blackrent
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-blackrent123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup:/backup
    ports:
      - '${DB_PORT:-5432}:5432'
    networks:
      - blackrent-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

  # Blackrent aplikácia
  blackrent:
    build: .
    container_name: blackrent-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Databáza
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: blackrent
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-blackrent123}

      # JWT
      JWT_SECRET: ${JWT_SECRET:-blackrent-super-secret-jwt-key-production-2024}

      # Server
      PORT: 5001
      NODE_ENV: production

      # CORS
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    ports:
      - '${APP_PORT:-5001}:5001'
    volumes:
      - ./logs:/app/logs
    networks:
      - blackrent-network
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:5001/api/health || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (voliteľný)
  nginx:
    image: nginx:alpine
    container_name: blackrent-nginx
    restart: unless-stopped
    depends_on:
      - blackrent
    ports:
      - '${NGINX_PORT:-80}:80'
      - '${NGINX_SSL_PORT:-443}:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    networks:
      - blackrent-network

  # Automatické zálohovanie (voliteľné)
  backup:
    image: postgres:15-alpine
    container_name: blackrent-backup
    restart: 'no'
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGPASSWORD: ${DB_PASSWORD:-blackrent123}
    volumes:
      - ./backup:/backup
      - ./scripts:/scripts
    networks:
      - blackrent-network
    command: >
      sh -c "
        echo 'Spúšťam zálohovanie...'
        pg_dump -h postgres -U ${DB_USER:-postgres} -d blackrent > /backup/blackrent-backup-$$(date +%Y%m%d-%H%M%S).sql
        echo 'Záloha dokončená'
        
        # Ponechať len posledných 7 záloh
        cd /backup && ls -t blackrent-backup-*.sql | tail -n +8 | xargs rm -f
      "

volumes:
  postgres_data:
    driver: local

networks:
  blackrent-network:
    driver: bridge
