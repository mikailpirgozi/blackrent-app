#!/usr/bin/env node

/**
 * Test vlastn√©ho fontu pre PDF-lib gener√°tor
 * Testuje ƒçi sa vlastn√Ω font naƒç√≠ta a funguje spr√°vne
 */

const fs = require('fs');
const path = require('path');

// Import custom font gener√°tora
const { PDFLibCustomFontGenerator } = require('./backend/dist/utils/pdf-lib-custom-font-generator');

console.log('üé® TESTOVANIE AEONIK FONTU');
console.log('===========================');
console.log(`üìÖ Test spusten√Ω: ${new Date().toLocaleString('sk-SK')}`);

// Mock handover protocol data s plnou diakritiku
const mockProtocolWithFullDiacritics = {
  id: 'custom-font-test-' + Date.now(),
  createdAt: new Date().toISOString(),
  location: 'Bratislava - Letisko M.R.≈†tef√°nika',
  status: 'completed',
  
  rentalData: {
    orderNumber: 'BR-2025-ƒåUƒåORIEDKY',
    startDate: new Date().toISOString(),
    endDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
    totalPrice: 350,
    deposit: 600,
    currency: 'EUR',
    
    customer: {
      name: 'ƒΩubom√≠r Kr√°ƒæ',
      email: 'lubomir.kral@email.sk',
      phone: '+421 905 123 456'
    },
    
    vehicle: {
      brand: '≈†koda',
      model: 'Superb Combi',
      licensePlate: 'BL-999-ƒå≈†',
      company: 'AutoRent ≈†t√∫rovo s.r.o.',
      year: 2024,
      color: 'ƒåerven√° metal√≠za'
    }
  },
  
  vehicleCondition: {
    odometer: 78950,
    fuelLevel: 95,
    fuelType: 'Nafta',
    exteriorCondition: 'V√Ωborn√Ω - ≈æiadne viditeƒæn√© po≈°kodenia',
    interiorCondition: 'Perfektn√Ω - ko≈æen√© sedadl√° v top stave',
    notes: 'Vozidlo je v bezchybnom stave. V≈°etky syst√©my funguj√∫ spr√°vne. Klimatiz√°cia, navig√°cia, parkovacie senzory - v≈°etko v poriadku. ƒåuƒçoriedky na sedadle boli vyƒçisten√©. üöó'
  },
  
  damages: [
    {
      description: 'Mal√© ≈°krabnutie na ƒæav√Ωch dver√°ch',
      severity: 'ƒΩahk√©',
      location: 'ƒΩav√© predn√© dvere',
      estimatedCost: 80
    },
    {
      description: 'Mal√Ω prasklinƒçek na ƒçelnom skle',
      severity: 'Kozmetick√©',
      location: 'ƒåeln√© sklo - ƒæav√Ω horn√Ω roh',
      estimatedCost: 120
    }
  ],
  
  vehicleImages: ['auto1.jpg', 'auto2.jpg', 'auto3.jpg', 'auto4.jpg', 'auto5.jpg'],
  documentImages: ['vodic_preukaz.jpg', 'tp_doklad.jpg'],
  damageImages: ['skoda1.jpg', 'skoda2.jpg'],
  vehicleVideos: ['walkround_video.mp4'],
  
  signatures: [
    {
      signerName: 'ƒΩubom√≠r Kr√°ƒæ',
      signerRole: 'Z√°kazn√≠k',
      timestamp: new Date().toISOString(),
      location: 'Bratislava'
    },
    {
      signerName: 'M√°ria Nov√°kov√°',
      signerRole: 'Z√°stupky≈àa AutoRent',
      timestamp: new Date().toISOString(), 
      location: 'Bratislava'
    }
  ],
  
  notes: 'Z√°kazn√≠k bol podrobne informovan√Ω o v≈°etk√Ωch podmienkach pren√°jmu. Poistenie zah≈ï≈àa v≈°etky rizik√°. ≈†pecifick√© po≈æiadavky: detsk√© sedaƒçky s√∫ k dispoz√≠cii na po≈æiadanie. ƒéakujeme za v√Ωber na≈°ej slu≈æby! ƒåuƒçoriedky, ƒæadov√© ka≈°ƒçe a e≈°te viac diakritiky: ≈§a≈æk√Ω ƒèateƒæ, k√¥≈à, m√¥≈æe≈° √≠s≈• ƒèalej! üéâ'
};

async function testCustomFont() {
  try {
    console.log('\nüîç KONTROLA FONT S√öBOROV...');
    console.log('============================');
    
    // Kontrola backend font adres√°ra
    const backendFontDir = './backend/fonts';
    const frontendFontDir = './public/fonts';
    
    console.log(`üìÇ Backend font dir: ${backendFontDir}`);
    console.log(`üìÇ Frontend font dir: ${frontendFontDir}`);
    
    // Skontrolujeme ƒçi existuj√∫ font s√∫bory
    const backendFonts = fs.existsSync(backendFontDir) ? fs.readdirSync(backendFontDir) : [];
    const frontendFonts = fs.existsSync(frontendFontDir) ? fs.readdirSync(frontendFontDir) : [];
    
    console.log(`üìã Backend fonty: ${backendFonts.length > 0 ? backendFonts.join(', ') : '≈ΩIADNE'}`);
    console.log(`üìã Frontend fonty: ${frontendFonts.length > 0 ? frontendFonts.join(', ') : '≈ΩIADNE'}`);
    
    if (backendFonts.length === 0) {
      console.log('\n‚ö†Ô∏è  ≈ΩIADNE FONT S√öBORY NEN√ÅJDEN√â!');
      console.log('üìã IN≈†TRUKCIE:');
      console.log('   1. Skontrolujte backend/fonts/ adres√°r');
      console.log('   2. Font s√∫bory musia by≈• v spr√°vnom form√°te (.ttf, .woff2, .woff)');
      console.log('   3. Pre frontend: public/fonts/ adres√°r');  
      console.log('   4. Spustite test znovu');
      console.log('\nüéØ TEST UKONƒåEN√ù - PRIDAJTE FONT S√öBORY');
      return;
    }
    
    console.log('\nüé® TESTOVANIE CUSTOM FONT GENER√ÅTORA...');
    console.log('=======================================');
    
    // Test s Aeonik fontom
    const fontName = 'aeonik'; // Profesion√°lny Aeonik font
    
    const customFontGenerator = new PDFLibCustomFontGenerator(fontName);
    const startTime = Date.now();
    const pdfBuffer = await customFontGenerator.generateHandoverProtocol(mockProtocolWithFullDiacritics);
    const endTime = Date.now();
    
    // Ulo≈æenie PDF
    const filename = `custom-font-test-${fontName}-${Date.now()}.pdf`;
    fs.writeFileSync(filename, pdfBuffer);
    
    console.log(`‚úÖ AEONIK FONT PDF VYGENEROVAN√â!`);
    console.log(`   üìÑ S√∫bor: ${filename}`);
    console.log(`   üìè Veƒækos≈•: ${(pdfBuffer.length / 1024).toFixed(1)} KB`);
    console.log(`   ‚è±Ô∏è  ƒåas: ${endTime - startTime}ms`);
    console.log(`   üé® Font: ${fontName.toUpperCase()} (Profesion√°lny webov√Ω font)`);
    console.log(`   üî§ Diakritika: PLN√Å PODPORA s Aeonik fontom!`);
    
    console.log('\nüîç TEST OBSAHU:');
    console.log('===============');
    console.log('‚úÖ ƒåuƒçoriedky, ƒæadov√© ka≈°ƒçe');
    console.log('‚úÖ ≈§a≈æk√Ω ƒèateƒæ, k√¥≈à, m√¥≈æe≈° √≠s≈• ƒèalej');
    console.log('‚úÖ ƒΩubom√≠r Kr√°ƒæ, ≈†koda Superb');
    console.log('‚úÖ V≈°etky slovensk√© znaky: √Å, √â, √ç, √ì, √ö, √ù, ƒå, ƒé, ƒΩ, ≈á, ≈î, ≈†, ≈§, ≈Ω');
    
    console.log('\nüìÅ V√ùSLEDOK:');
    console.log('=============');
    console.log(`üîç Otvorte s√∫bor: ${filename}`);
    console.log('üé® Kontrolujte ƒçi sa Aeonik font zobrazuje spr√°vne');
    console.log('üî§ Overte ƒçi s√∫ v≈°etky slovensk√© znaky spr√°vne');  
    console.log('üíº Profesion√°lny vzhƒæad s Aeonik fontom');
    
    console.log('\nüéâ AEONIK FONT TEST DOKONƒåEN√ù √öSPE≈†NE!');
    
    // Otvorenie PDF s√∫boru
    console.log(`\nüìÇ Otv√°ram PDF s√∫bor...`);
    require('child_process').exec(`open "${filename}"`, (error) => {
      if (error) {
        console.log('‚ö†Ô∏è  Nepodarilo sa automaticky otvori≈• PDF s√∫bor');
        console.log(`üìã Manu√°lne otvorte: ${filename}`);
      }
    });
    
  } catch (error) {
    console.error('\n‚ùå AEONIK FONT TEST ZLYHAL:', error);
    console.log('\nüîß MO≈ΩN√â RIE≈†ENIA:');
    console.log('==================');
    console.log('1. Skontrolujte ≈æe Aeonik font s√∫bory existuj√∫');
    console.log('2. Skontrolujte backend/fonts/Aeonik* adres√°r');
    console.log('3. Overte WOFF2/WOFF form√°ty');
    console.log('4. Spustite: cd backend && npm run build');
    console.log(`5. Detailn√° chyba: ${error.message}`);
    if (error.stack) {
      console.log(`6. Stack trace: ${error.stack.split('\n').slice(0, 3).join('\n')}`);
    }
  }
}

// Spustenie testu
testCustomFont(); 