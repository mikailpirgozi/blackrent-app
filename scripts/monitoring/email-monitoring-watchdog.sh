#!/bin/bash

# üìß Email Monitoring Watchdog Script
# Zabezpeƒçuje ≈æe email monitoring be≈æ√≠ st√°le na produkƒçnej verzii

# Farby
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Konfigur√°cia
RAILWAY_API="https://blackrent-app-production-4d6f.up.railway.app/api"
LOCAL_API="http://localhost:3001/api"
CHECK_INTERVAL=300  # 5 min√∫t
MAX_RETRIES=3

# Funkcia na z√≠skanie auth tokenu
get_auth_token() {
    local api_url=$1
    curl -s -X POST -H "Content-Type: application/json" \
         -d '{"username":"admin","password":"Black123"}' \
         "$api_url/auth/login" | grep -o '"token":"[^"]*"' | cut -d'"' -f4
}

# Funkcia na kontrolu IMAP statusu
check_imap_status() {
    local api_url=$1
    local token=$2
    
    curl -s -H "Authorization: Bearer $token" \
         "$api_url/email-imap/status" | \
         grep -o '"running":[^,]*' | cut -d':' -f2
}

# Funkcia na spustenie IMAP monitoringu
start_imap_monitoring() {
    local api_url=$1
    local token=$2
    
    echo -e "${BLUE}üöÄ Sp√∫≈°≈•am IMAP monitoring...${NC}"
    
    response=$(curl -s -H "Authorization: Bearer $token" \
                    -X POST "$api_url/email-imap/start")
    
    if [[ $response == *"success\":true"* ]]; then
        echo -e "${GREEN}‚úÖ IMAP monitoring √∫spe≈°ne spusten√Ω${NC}"
        return 0
    else
        echo -e "${RED}‚ùå Chyba pri spusten√≠ IMAP monitoringu: $response${NC}"
        return 1
    fi
}

# Funkcia na kontrolu a opravu
check_and_fix() {
    local api_url=$1
    local env_name=$2
    
    echo -e "${BLUE}üîç Kontrolujem $env_name email monitoring...${NC}"
    
    # Z√≠skanie tokenu
    token=$(get_auth_token "$api_url")
    if [[ -z "$token" ]]; then
        echo -e "${RED}‚ùå Nepodarilo sa z√≠ska≈• auth token pre $env_name${NC}"
        return 1
    fi
    
    # Kontrola statusu
    running=$(check_imap_status "$api_url" "$token")
    
    if [[ "$running" == "true" ]]; then
        echo -e "${GREEN}‚úÖ $env_name: Email monitoring be≈æ√≠ spr√°vne${NC}"
        return 0
    else
        echo -e "${YELLOW}‚ö†Ô∏è $env_name: Email monitoring NEBE≈Ω√ç!${NC}"
        
        # Pokus o opravu
        for ((i=1; i<=MAX_RETRIES; i++)); do
            echo -e "${BLUE}üîß Pokus $i/$MAX_RETRIES o spustenie...${NC}"
            
            if start_imap_monitoring "$api_url" "$token"; then
                echo -e "${GREEN}‚úÖ $env_name: Email monitoring opraven√Ω!${NC}"
                return 0
            fi
            
            if [[ $i -lt $MAX_RETRIES ]]; then
                echo -e "${YELLOW}‚è≥ ƒåak√°m 10 sek√∫nd pred ƒèal≈°√≠m pokusom...${NC}"
                sleep 10
            fi
        done
        
        echo -e "${RED}‚ùå $env_name: Nepodarilo sa opravi≈• email monitoring po $MAX_RETRIES pokusoch${NC}"
        return 1
    fi
}

# Hlavn√° funkcia watchdog
watchdog_loop() {
    echo -e "${GREEN}üêï Email Monitoring Watchdog spusten√Ω${NC}"
    echo -e "${BLUE}üìß Kontrolujem ka≈æd√Ωch $CHECK_INTERVAL sek√∫nd...${NC}"
    echo ""
    
    while true; do
        timestamp=$(date '+%Y-%m-%d %H:%M:%S')
        echo -e "${BLUE}‚è∞ [$timestamp] Sp√∫≈°≈•am kontrolu...${NC}"
        
        # Kontrola localhost (ak be≈æ√≠)
        if curl -s http://localhost:3001/api/health > /dev/null 2>&1; then
            check_and_fix "$LOCAL_API" "LOCALHOST"
        else
            echo -e "${YELLOW}‚ö†Ô∏è LOCALHOST: Server nebe≈æ√≠, preskakujem${NC}"
        fi
        
        echo ""
        
        # Kontrola produkcie (Railway)
        check_and_fix "$RAILWAY_API" "PRODUKCIA"
        
        echo ""
        echo -e "${BLUE}‚è≥ ƒåak√°m $CHECK_INTERVAL sek√∫nd do ƒèal≈°ej kontroly...${NC}"
        echo "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"
        echo ""
        
        sleep $CHECK_INTERVAL
    done
}

# Jednor√°zov√° kontrola
single_check() {
    echo -e "${GREEN}üîç Jednor√°zov√° kontrola email monitoringu${NC}"
    echo ""
    
    # Kontrola localhost
    if curl -s http://localhost:3001/api/health > /dev/null 2>&1; then
        check_and_fix "$LOCAL_API" "LOCALHOST"
    else
        echo -e "${YELLOW}‚ö†Ô∏è LOCALHOST: Server nebe≈æ√≠${NC}"
    fi
    
    echo ""
    
    # Kontrola produkcie
    check_and_fix "$RAILWAY_API" "PRODUKCIA"
}

# Spracovanie argumentov
case "${1:-}" in
    "watch"|"watchdog"|"")
        watchdog_loop
        ;;
    "check"|"status")
        single_check
        ;;
    "help"|"-h"|"--help")
        echo "üìß Email Monitoring Watchdog"
        echo ""
        echo "Pou≈æitie:"
        echo "  $0 [watch|check|help]"
        echo ""
        echo "Pr√≠kazy:"
        echo "  watch    - Spust√≠ nekoneƒçn√Ω watchdog (default)"
        echo "  check    - Jednor√°zov√° kontrola"
        echo "  help     - Zobraz√≠ t√∫to n√°povedu"
        echo ""
        echo "Funkcie:"
        echo "  ‚úÖ Automatick√° kontrola ka≈æd√Ωch 5 min√∫t"
        echo "  üîß Automatick√© spustenie ak monitoring nebe≈æ√≠"
        echo "  üè† Kontrola localhost aj produkcie"
        echo "  üîÑ 3 pokusy o opravu"
        echo "  üìä Detailn√© loggovanie"
        ;;
    *)
        echo -e "${RED}‚ùå Nezn√°my argument: $1${NC}"
        echo "Pou≈æite: $0 help"
        exit 1
        ;;
esac
