# ðŸ”Œ API Testing Snippets for {{fieldLabel}} Field

## Field Details
- **Field Name**: `{{fieldName}}`
- **Table**: `{{table}}`
- **Type**: `{{type}}`
- **Default**: `{{defaultValue}}`
{{#if description}}
- **Description**: {{description}}
{{/if}}

## MRE Test Sequence: CREATE â†’ GET â†’ PUT â†’ GET

### 1. CREATE - Add new {{table}} record with {{fieldName}}

```bash
curl -X POST http://localhost:3001/api/{{table}} \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer YOUR_JWT_TOKEN" \
  -d '{
    "{{fieldName}}": {{#if (eq type 'string')}}"test-{{fieldName}}"{{else if (eq type 'number')}}123{{else if (eq type 'boolean')}}true{{else if (eq type 'enum')}}"{{enumValues.[0]}}"{{/if}}
  }'
```

Expected response:
```json
{
  "success": true,
  "message": "{{table}} ÃºspeÅ¡ne vytvorenÃ½",
  "data": {
    "id": "uuid-here",
    "{{fieldName}}": {{#if (eq type 'string')}}"test-{{fieldName}}"{{else if (eq type 'number')}}123{{else if (eq type 'boolean')}}true{{else if (eq type 'enum')}}"{{enumValues.[0]}}"{{/if}},
    "createdAt": "2025-01-30T10:00:00Z"
  }
}
```

### 2. GET - Retrieve the record

```bash
curl -X GET http://localhost:3001/api/{{table}}/UUID_FROM_CREATE \
  -H "Authorization: Bearer YOUR_JWT_TOKEN"
```

Expected response:
```json
{
  "success": true,
  "data": {
    "id": "uuid-here",
    "{{fieldName}}": {{#if (eq type 'string')}}"test-{{fieldName}}"{{else if (eq type 'number')}}123{{else if (eq type 'boolean')}}true{{else if (eq type 'enum')}}"{{enumValues.[0]}}"{{/if}},
    "createdAt": "2025-01-30T10:00:00Z",
    "updatedAt": null
  }
}
```

### 3. PUT - Update the {{fieldName}} field

```bash
curl -X PUT http://localhost:3001/api/{{table}}/UUID_FROM_CREATE \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer YOUR_JWT_TOKEN" \
  -d '{
    "{{fieldName}}": {{#if (eq type 'string')}}"updated-{{fieldName}}"{{else if (eq type 'number')}}456{{else if (eq type 'boolean')}}false{{else if (eq type 'enum')}}"{{enumValues.[1]}}"{{/if}}
  }'
```

Expected response:
```json
{
  "success": true,
  "message": "{{table}} ÃºspeÅ¡ne aktualizovanÃ½",
  "data": {
    "id": "uuid-here",
    "{{fieldName}}": {{#if (eq type 'string')}}"updated-{{fieldName}}"{{else if (eq type 'number')}}456{{else if (eq type 'boolean')}}false{{else if (eq type 'enum')}}"{{enumValues.[1]}}"{{/if}},
    "updatedAt": "2025-01-30T10:05:00Z"
  }
}
```

### 4. GET - Verify the update

```bash
curl -X GET http://localhost:3001/api/{{table}}/UUID_FROM_CREATE \
  -H "Authorization: Bearer YOUR_JWT_TOKEN"
```

Expected response:
```json
{
  "success": true,
  "data": {
    "id": "uuid-here",
    "{{fieldName}}": {{#if (eq type 'string')}}"updated-{{fieldName}}"{{else if (eq type 'number')}}456{{else if (eq type 'boolean')}}false{{else if (eq type 'enum')}}"{{enumValues.[1]}}"{{/if}},
    "updatedAt": "2025-01-30T10:05:00Z"
  }
}
```

## Error Cases to Test

### Invalid Type
```bash
curl -X POST http://localhost:3001/api/{{table}} \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer YOUR_JWT_TOKEN" \
  -d '{
    "{{fieldName}}": {{#if (eq type 'number')}}"not-a-number"{{else if (eq type 'boolean')}}"not-boolean"{{else if (eq type 'enum')}}"invalid-enum"{{else}}123{{/if}}
  }'
```

Expected: 400 Bad Request with validation error

{{#if (eq type 'number')}}
{{#if minValue}}
### Below Minimum Value
```bash
curl -X POST http://localhost:3001/api/{{table}} \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer YOUR_JWT_TOKEN" \
  -d '{
    "{{fieldName}}": {{minValue}} - 1
  }'
```

Expected: 400 Bad Request with constraint error
{{/if}}
{{/if}}

## Telemetry Logs to Check

Look for these log entries in the server console:

```
ðŸ”„ Updating {{fieldName}} { requestId: "...", id: "...", oldValue: ..., newValue: ... }
âœ… {{fieldName}} updated successfully { requestId: "...", id: "...", {{fieldName}}: ... }
```
