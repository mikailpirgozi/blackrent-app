#!/bin/bash

# BlackRent Customer Website - Stable Server Script
# Tento script zabezpeƒçuje stabiln√© sp√∫≈°≈•anie servera s automatick√Ωm rie≈°en√≠m probl√©mov

set -e

echo "üöÄ BlackRent Customer Website - Stable Server Startup"
echo "=================================================="

# Farby pre v√Ωstup
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Funkcia pre loggovanie
log() {
    echo -e "${BLUE}[$(date '+%H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# Kontrola ƒçi sme v spr√°vnom adres√°ri
if [ ! -f "package.json" ]; then
    error "Nie ste v customer-website adres√°ri!"
    exit 1
fi

# Kontrola ƒçi existuje Next.js config
if [ ! -f "next.config.js" ]; then
    error "next.config.js s√∫bor neexistuje!"
    exit 1
fi

# Funkcia pre ƒçistenie portov
cleanup_ports() {
    log "ƒåistenie portov..."
    
    # Ukonƒçenie procesov na porte 3002
    if lsof -ti:3002 >/dev/null 2>&1; then
        warning "Port 3002 je obsaden√Ω, ukonƒçujem procesy..."
        lsof -ti:3002 | xargs kill -9 2>/dev/null || true
        sleep 2
    fi
    
    success "Porty vyƒçisten√©"
}

# Funkcia pre valid√°ciu assets
validate_assets() {
    log "Valid√°cia assets..."
    
    # Kontrola kritick√Ωch SVG s√∫borov
    local missing_assets=()
    
    if [ ! -f "public/figma-assets/union-18.svg" ]; then
        missing_assets+=("union-18.svg")
    fi
    
    if [ ! -f "public/figma-assets/icon-24-px-filled-120.svg" ]; then
        missing_assets+=("icon-24-px-filled-120.svg")
    fi
    
    if [ ! -f "public/figma-assets/icon-24-px-132.svg" ]; then
        missing_assets+=("icon-24-px-132.svg")
    fi
    
    if [ ${#missing_assets[@]} -gt 0 ]; then
        warning "Ch√Ωbaj√∫ce assets: ${missing_assets[*]}"
        log "Vytv√°ram n√°hradn√© s√∫bory..."
        
        # Vytvorenie n√°hradn√Ωch s√∫borov
        cd public/figma-assets/
        
        if [ ! -f "union-18.svg" ] && [ -f "union-1.svg" ]; then
            cp union-1.svg union-18.svg
        fi
        
        if [ ! -f "icon-24-px-filled-120.svg" ] && [ -f "arrow-small-down.svg" ]; then
            cp arrow-small-down.svg icon-24-px-filled-120.svg
        fi
        
        if [ ! -f "icon-24-px-132.svg" ] && [ -f "icon-16px-arrow-down.svg" ]; then
            cp icon-16px-arrow-down.svg icon-24-px-132.svg
        fi
        
        cd ../..
        success "N√°hradn√© assets vytvoren√©"
    else
        success "V≈°etky assets s√∫ k dispoz√≠cii"
    fi
}

# Funkcia pre ƒçistenie cache
clean_cache() {
    log "ƒåistenie cache..."
    
    if [ -d ".next" ]; then
        rm -rf .next
        success "Next.js cache vyƒçisten√°"
    fi
    
    if [ -d "node_modules/.cache" ]; then
        rm -rf node_modules/.cache
        success "Node modules cache vyƒçisten√°"
    fi
}

# Funkcia pre kontrolu dependencies
check_dependencies() {
    log "Kontrola dependencies..."
    
    if [ ! -d "node_modules" ]; then
        warning "node_modules neexistuje, in≈°talujem dependencies..."
        npm install
    fi
    
    success "Dependencies s√∫ v poriadku"
}

# Funkcia pre spustenie servera
start_server() {
    log "Sp√∫≈°≈•am server na porte 3002..."
    
    # Nastavenie environment premenn√Ωch pre stabilitu
    export NODE_ENV=development
    export NEXT_TELEMETRY_DISABLED=1
    export FORCE_COLOR=1
    
    # Spustenie servera s error handling
    npm run dev 2>&1 | while IFS= read -r line; do
        echo "[$(date '+%H:%M:%S')] $line"
        
        # Detekcia ch√Ωb a automatick√© rie≈°enie
        if [[ "$line" == *"EADDRINUSE"* ]]; then
            error "Port 3002 je obsaden√Ω!"
            cleanup_ports
            exit 1
        fi
        
        if [[ "$line" == *"MODULE_NOT_FOUND"* ]]; then
            error "Ch√Ωbaj√∫ci modul!"
            exit 1
        fi
        
        if [[ "$line" == *"Ready in"* ]]; then
            success "Server je pripraven√Ω na http://localhost:3002"
        fi
    done
}

# Hlavn√° logika
main() {
    log "Zaƒç√≠nam stable server startup..."
    
    # 1. ƒåistenie portov
    cleanup_ports
    
    # 2. Valid√°cia assets
    validate_assets
    
    # 3. Kontrola dependencies
    check_dependencies
    
    # 4. ƒåistenie cache (voliteƒæn√©)
    if [ "$1" = "--clean" ]; then
        clean_cache
    fi
    
    # 5. Spustenie servera
    start_server
}

# Spustenie s error handling
trap 'error "Script preru≈°en√Ω"; exit 1' INT TERM

main "$@"
