#!/bin/bash

# üè• BlackRent Diagnostics Hub
# Hlavn√Ω vstupn√Ω bod pre diagnostiku a rie≈°enie probl√©mov

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
echo -e "${CYAN}‚ïë                üè• BlackRent Diagnostics Hub                 ‚ïë${NC}"
echo -e "${CYAN}‚ïë              R√Ωchla diagnostika a rie≈°enie                  ‚ïë${NC}"
echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
echo ""

# Skontroluj ƒçi existuj√∫ diagnostick√© skripty
if [ ! -f "scripts/diagnostics/health-check.sh" ]; then
    echo -e "${RED}‚ùå Diagnostick√© skripty nen√°jden√©!${NC}"
    echo -e "${YELLOW}üí° Spustite najprv setup diagnostick√Ωch n√°strojov.${NC}"
    exit 1
fi

# Menu
echo -e "${BLUE}Vyberte akciu:${NC}"
echo -e "${CYAN}1.${NC} üîç √öpln√° diagnostika (odpor√∫ƒçan√©)"
echo -e "${CYAN}2.${NC} üîß Automatick√© rie≈°enie probl√©mov"
echo -e "${CYAN}3.${NC} üßπ Vyƒçisti≈• porty a procesy"
echo -e "${CYAN}4.${NC} üìä Spusti≈• live monitoring"
echo -e "${CYAN}5.${NC} ‚ö° R√Ωchly re≈°tart aplik√°cie"
echo -e "${CYAN}6.${NC} üìã Zobrazi≈• logy"
echo -e "${CYAN}q.${NC} Ukonƒçi≈•"
echo ""

while true; do
    read -p "Va≈°a voƒæba (1-6, q): " choice
    case $choice in
        1)
            echo -e "\n${BLUE}üîç Sp√∫≈°≈•am √∫pln√∫ diagnostiku...${NC}"
            ./scripts/diagnostics/health-check.sh
            break
            ;;
        2)
            echo -e "\n${BLUE}üîß Sp√∫≈°≈•am automatick√© rie≈°enie...${NC}"
            ./scripts/diagnostics/auto-fix.sh
            break
            ;;
        3)
            echo -e "\n${BLUE}üßπ ƒåist√≠m porty a procesy...${NC}"
            ./scripts/diagnostics/cleanup-ports.sh
            break
            ;;
        4)
            echo -e "\n${BLUE}üìä Sp√∫≈°≈•am live monitoring...${NC}"
            echo -e "${YELLOW}Stlaƒçte Ctrl+C pre ukonƒçenie${NC}"
            ./scripts/diagnostics/start-monitoring.sh
            break
            ;;
        5)
            echo -e "\n${BLUE}‚ö° Re≈°tartujem aplik√°ciu...${NC}"
            npm run dev:restart
            break
            ;;
        6)
            echo -e "\n${BLUE}üìã Posledn√© logy:${NC}"
            echo -e "${CYAN}=== Backend Log (posledn√Ωch 20 riadkov) ===${NC}"
            tail -20 logs/backend.log 2>/dev/null || echo "Backend log nen√°jden√Ω"
            echo ""
            echo -e "${CYAN}=== Frontend Log (posledn√Ωch 20 riadkov) ===${NC}"
            tail -20 logs/frontend.log 2>/dev/null || echo "Frontend log nen√°jden√Ω"
            break
            ;;
        q|Q)
            echo -e "\n${GREEN}üëã Dovidenia!${NC}"
            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå Neplatn√° voƒæba. Zadajte 1-6 alebo q.${NC}"
            ;;
    esac
done

echo ""
echo -e "${CYAN}üí° Pre r√Ωchle spustenie konkr√©tnej diagnostiky:${NC}"
echo -e "   ${CYAN}./diagnose.sh${NC}           - Toto menu"
echo -e "   ${CYAN}./scripts/diagnostics/health-check.sh${NC} - √öpln√° diagnostika"
echo -e "   ${CYAN}./scripts/diagnostics/auto-fix.sh${NC}     - Auto-fix"
