#!/usr/bin/env node

/**
 * üß™ Test script pre PDF typografiu
 * Testuje priamo PDF gener√°tor s novou typografiou
 */

const { PDFLibCustomFontGenerator } = require('./dist/utils/pdf-lib-custom-font-generator.js');
const fs = require('fs');
const path = require('path');

console.log('üß™ TESTOVANIE PDF TYPOGRAFIE');
console.log('============================');

async function testPDFTypography() {
  try {
    console.log('üé® Vytv√°ram PDF gener√°tor...');
    const generator = new PDFLibCustomFontGenerator('sf-pro');
    
    // Testovac√≠ protokol
    const testProtocol = {
      id: 'TEST-TYPOGRAPHY-001',
      location: 'Trenƒç√≠n - TEST',
      createdAt: new Date().toISOString(),
      completedAt: new Date().toISOString(),
      vehicleCondition: {
        odometer: 50000,
        fuelLevel: 75,
        fuelType: 'Benz√≠n',
        exteriorCondition: 'V√Ωborn√Ω',
        interiorCondition: 'Dobr√Ω'
      },
      notes: 'Toto je testovacia pozn√°mka pre overenie novej typografie. Mala by by≈• nap√≠san√° s body ≈°t√Ωlom (11px, regular font). Pozrite si rozdiel medzi nadpismi (bold, v√§ƒç≈°ie) a t√Ωmto textom (regular, men≈°√≠).',
      rentalData: {
        id: 'TEST-RENTAL-001',
        customer: {
          name: 'Test Z√°kazn√≠k',
          email: 'test@example.com',
          phone: '+421900000000'
        },
        vehicle: {
          brand: 'Mercedes',
          model: 'CLA 200',
          licensePlate: 'TEST123',
          company: 'Test Firma s.r.o.'
        },
        startDate: new Date().toISOString(),
        endDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString()
      },
      damages: [
        {
          id: 'damage-1',
          description: 'Mal√° ≈°krabnutina na prednom n√°razn√≠ku',
          severity: 'minor',
          location: 'front_bumper'
        }
      ],
      signatures: [
        {
          id: 'customer-signature',
          type: 'customer',
          name: 'Test Z√°kazn√≠k',
          timestamp: new Date().toISOString()
        }
      ]
    };

    console.log('üìÑ Generujem test PDF s novou typografiou...');
    const pdfBuffer = await generator.generateHandoverProtocol(testProtocol);
    
    // Ulo≈æenie test PDF
    const outputPath = path.join(__dirname, 'test-typography-output.pdf');
    fs.writeFileSync(outputPath, pdfBuffer);
    
    console.log(`‚úÖ Test PDF vygenerovan√©: ${outputPath}`);
    console.log(`üìä Veƒækos≈• s√∫boru: ${(pdfBuffer.length / 1024).toFixed(1)} KB`);
    
    // Zobrazenie inform√°ci√≠ o fontoch
    console.log('\nüî§ VR√ÅTEN√â P√îVODN√â NASTAVENIA:');
    console.log('- H1 nadpisy: 18px, BOLD (tmav√° farba)');
    console.log('- H2 sekcie: 14px, BOLD (stredn√° farba)');
    console.log('- H3 pod-sekcie: 12px, REGULAR (svetlej≈°ia farba)');
    console.log('- Labels: 10px, BOLD (tmav√° farba)');
    console.log('- Values: 10px, REGULAR (svetlej≈°ia farba)');
    console.log('- Body text: 11px, REGULAR (stredn√° farba)');
    console.log('- Caption: 9px, REGULAR (svetlej≈°ia farba)');
    console.log('- Footer: 8px, REGULAR (najsvetlej≈°ia farba)');
    
    console.log('\nüéØ OƒåAK√ÅVAN√â ZMENY:');
    console.log('- Hlavn√Ω nadpis "ODOVZD√ÅVAC√ç PROTOKOL" by mal by≈• V√ùRAZNE v√§ƒç≈°√≠ a hrub≈°√≠');
    console.log('- Sekcie ako "Z√°kladn√© inform√°cie" by mali by≈• hrub≈°ie ako predt√Ωm');
    console.log('- Labels (napr. "Z√°kazn√≠k:") by mali by≈• hrub≈°ie');
    console.log('- Values (napr. meno z√°kazn√≠ka) by mali by≈• ten≈°ie a svetlej≈°ie');
    console.log('- Pozn√°mky by mali ma≈• stredn√Ω font weight');
    console.log('- Footer by mal by≈• najmen≈°√≠ a najsvetlej≈°√≠');
    
    console.log('\nüöÄ Test dokonƒçen√Ω! Otvor s√∫bor test-typography-output.pdf');
    
  } catch (error) {
    console.error('‚ùå Chyba pri testovan√≠ PDF:', error);
    console.error('Stack trace:', error.stack);
  }
}

testPDFTypography();
