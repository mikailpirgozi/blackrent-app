import {
/* Tailwind classes used for styling */
  KeyboardArrowDown as KeyboardArrowDownIcon,
  EmojiEvents as TrophyIcon,
} from '@mui/icons-material';
import { Avatar, Button,
  Card,
  CardContent,
  Typography, } from '@mui/material';
import React from 'react';

interface TopListCardProps {
  title: string;
  icon: React.ReactNode;
  gradient: string;
  data: Record<string, unknown>[];
  showCount: number;
  onLoadMore: () => void;
  renderItem: (item: Record<string, unknown>, index: number) => React.ReactNode;
  emptyMessage?: string;
}

const TopListCard: React.FC<TopListCardProps> = ({
  title,
  icon,
  gradient,
  data,
  showCount,
  onLoadMore,
  renderItem,
  emptyMessage = 'Žiadne dáta',
}) => (
  <Card
    sx={{
      height: 'fit-content',
      boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
      transition: 'all 0.2s ease',
      '&:hover': {
        boxShadow: '0 4px 16px rgba(0,0,0,0.15)',
      },
    }}
  >
    <CardContent>
      <div className="/* TODO: Convert display: flex */ /* TODO: Convert alignItems: center */ gap-4 /* TODO: Convert mb: 3 */">
        <Avatar
          className="/* TODO: Convert bgcolor: transparent */ /* TODO: Convert background: gradient */ /* TODO: Convert width: 48 */ /* TODO: Convert height: 48 */"
        >
          {icon}
        </Avatar>
        <div className="/* TODO: Convert flex: 1 */">
          <Typography variant="h6" className="/* TODO: Convert fontWeight: 700 */ /* TODO: Convert color: #667eea */">
            {title}
          </Typography>
          <Typography variant="body2" color="text.secondary">
            Top {Math.min(showCount, data.length)} z {data.length}
          </Typography>
        </div>
        <TrophyIcon className="/* TODO: Convert color: #ffd700 */ /* TODO: Convert fontSize: 28 */" />
      </div>

      {data.length === 0 ? (
        <div className="/* TODO: Convert textAlign: center */ /* TODO: Convert py: 4 */">
          <Typography variant="body1" color="text.secondary">
            {emptyMessage}
          </Typography>
        </div>
      ) : (
        <>
          <div className="/* TODO: Convert display: flex */ /* TODO: Convert flexDirection: column */ gap-3">
            {data
              .slice(0, showCount)
              .map((item, index) => renderItem(item, index))}
          </div>

          {showCount < data.length && (
            <div className="/* TODO: Convert mt: 3 */ /* TODO: Convert textAlign: center */">
              <Button
                variant="outlined"
                onClick={onLoadMore}
                startIcon={<KeyboardArrowDownIcon />}
                sx={{
                  borderColor: '#667eea',
                  color: '#667eea',
                  '&:hover': {
                    borderColor: '#5a6fd8',
                    backgroundColor: 'rgba(102, 126, 234, 0.04)',
                  },
                }}
              >
                Zobraziť ďalších {Math.min(10, data.length - showCount)}
              </Button>
            </div>
          )}
        </>
      )}
    </CardContent>
  </Card>
);

export default TopListCard;
