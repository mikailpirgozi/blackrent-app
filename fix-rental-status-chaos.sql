-- üîß BlackRent Database Cleanup #1: RENTAL STATUS UNIFICATION
-- Autor: AI Assistant
-- D√°tum: $(date)
-- Cieƒæ: Zjednoti≈• status/confirmed/paid do jedn√©ho jasn√©ho status stavu

-- =====================================================
-- F√ÅZA 1: ANAL√ùZA S√öƒåASN√âHO STAVU
-- =====================================================

-- Skontroluj s√∫ƒçasn√© kombin√°cie stavov
SELECT 
    status,
    confirmed,
    paid,
    COUNT(*) as count,
    ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(), 2) as percentage
FROM rentals 
GROUP BY status, confirmed, paid
ORDER BY count DESC;

-- =====================================================
-- F√ÅZA 2: VYTVORENIE NOV√âHO STATUS ENUM
-- =====================================================

-- Vytvor nov√Ω typ pre unified status
DROP TYPE IF EXISTS rental_status_enum CASCADE;
CREATE TYPE rental_status_enum AS ENUM (
    'pending',      -- ƒåak√° na potvrdenie (status=pending, confirmed=false, paid=false)
    'confirmed',    -- Potvrden√Ω ale nezaplaten√Ω (status=pending, confirmed=true, paid=false)
    'paid',         -- Zaplaten√Ω a pripraven√Ω (confirmed=true, paid=true)
    'active',       -- Pr√°ve prebieha (active rental)
    'completed',    -- √öspe≈°ne ukonƒçen√Ω (returned)
    'cancelled'     -- Zru≈°en√Ω
);

-- =====================================================
-- F√ÅZA 3: PRIDANIE NOV√âHO STƒπPCA
-- =====================================================

-- Pridaj nov√Ω unified status stƒ∫pec
ALTER TABLE rentals ADD COLUMN IF NOT EXISTS status_unified rental_status_enum;

-- =====================================================
-- F√ÅZA 4: MIGR√ÅCIA D√ÅTA (SMART MAPPING)
-- =====================================================

-- Mapovanie logiky na z√°klade s√∫ƒçasn√Ωch kombin√°ci√≠:
UPDATE rentals SET status_unified = 
    CASE 
        -- Zru≈°en√© pren√°jmy
        WHEN status = 'cancelled' THEN 'cancelled'::rental_status_enum
        
        -- Ukonƒçen√© pren√°jmy
        WHEN status = 'completed' OR status = 'returned' THEN 'completed'::rental_status_enum
        
        -- Akt√≠vne pren√°jmy (pr√°ve prebiehaj√∫)
        WHEN status = 'active' OR (confirmed = true AND paid = true AND start_date <= CURRENT_DATE AND end_date >= CURRENT_DATE) 
        THEN 'active'::rental_status_enum
        
        -- Zaplaten√© a pripraven√©
        WHEN confirmed = true AND paid = true THEN 'paid'::rental_status_enum
        
        -- Potvrden√© ale nezaplaten√©  
        WHEN confirmed = true AND paid = false THEN 'confirmed'::rental_status_enum
        
        -- ƒåakaj√∫ce na potvrdenie (default)
        ELSE 'pending'::rental_status_enum
    END;

-- =====================================================
-- F√ÅZA 5: VALID√ÅCIA MIGR√ÅCIE
-- =====================================================

-- Skontroluj v√Ωsledok migr√°cie
SELECT 
    'PRED MIGR√ÅCIOU - Star√° logika' as phase,
    status as old_status,
    confirmed,
    paid,
    NULL::text as new_status,
    COUNT(*) as count
FROM (
    SELECT status, confirmed, paid FROM rentals LIMIT 0
) t
GROUP BY status, confirmed, paid

UNION ALL

SELECT 
    'PO MIGR√ÅCII - Nov√° logika' as phase,
    status as old_status,
    confirmed,
    paid, 
    status_unified::text as new_status,
    COUNT(*) as count
FROM rentals 
GROUP BY status, confirmed, paid, status_unified
ORDER BY phase, count DESC;

-- =====================================================
-- F√ÅZA 6: BEZPEƒåNOSTN√Å KONTROLA
-- =====================================================

-- Skontroluj ƒçi v≈°etky z√°znamy maj√∫ nov√Ω status
SELECT 
    COUNT(*) as total_rentals,
    COUNT(status_unified) as migrated_rentals,
    COUNT(*) - COUNT(status_unified) as unmigrated_rentals
FROM rentals;

-- Ak s√∫ unmigrated_rentals > 0, STOP a oprav probl√©my!

-- =====================================================
-- F√ÅZA 7: VYƒåISTENIE (SPUSTI LEN AK JE MIGR√ÅCIA OK!)
-- =====================================================

-- POZOR: T√°to sekcia je komentovan√° pre bezpeƒçnos≈•
-- Spusti len po kontrole ≈æe migr√°cia prebehla spr√°vne

/*
-- Nahraƒè star√Ω status stƒ∫pec nov√Ωm
ALTER TABLE rentals RENAME COLUMN status TO status_old_backup;
ALTER TABLE rentals RENAME COLUMN status_unified TO status;
ALTER TABLE rentals ALTER COLUMN status SET NOT NULL;
ALTER TABLE rentals ALTER COLUMN status SET DEFAULT 'pending'::rental_status_enum;

-- Odstr√°≈à redundantn√© stƒ∫pce (po kontrole!)
ALTER TABLE rentals DROP COLUMN confirmed;
ALTER TABLE rentals DROP COLUMN paid;

-- Vytvor index pre nov√Ω status
CREATE INDEX IF NOT EXISTS idx_rentals_status_unified ON rentals(status);

-- Nakoniec vyƒçisti backup stƒ∫pec (po potvrden√≠ ≈æe v≈°etko funguje)
-- ALTER TABLE rentals DROP COLUMN status_old_backup;
*/

-- =====================================================
-- V√ùSLEDOK
-- =====================================================

SELECT 
    '‚úÖ RENTAL STATUS UNIFICATION COMPLETED' as result,
    'Nov√Ω status_unified stƒ∫pec vytvoren√Ω a naplnen√Ω' as description,
    'Spusti F√ÅZU 7 manu√°lne po kontrole v√Ωsledkov' as next_step; 