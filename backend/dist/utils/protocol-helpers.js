"use strict";
/**
 * Protocol Helper Functions
 * Funkcie pre spr√°vne zobrazenie firiem na protokoloch
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PROTOCOL_REPRESENTATIVE = void 0;
exports.getProtocolCompanyDisplay = getProtocolCompanyDisplay;
exports.getRepresentativeSection = getRepresentativeSection;
exports.getProtocolCompanyInfo = getProtocolCompanyInfo;
/**
 * Mapovanie intern√Ωch n√°zvov firiem na ofici√°lne n√°zvy pre protokoly
 */
const COMPANY_PROTOCOL_MAPPING = {
    '3ple digit': 'P2 invest s.r.o.',
    'Ado a miro': 'Finance cars s.r.o.',
    'Ado Miro': 'Finance cars s.r.o.' // ‚úÖ PRIDAN√â: Mapovanie pre Ado Miro (bez "a")
    // M√¥≈æeme prida≈• ƒèal≈°ie mapovanie podƒæa potreby
};
/**
 * Z√≠skanie ofici√°lneho n√°zvu firmy pre zobrazenie na protokoloch
 * @param internalCompanyName - Intern√Ω n√°zov firmy (napr. "3ple digit")
 * @returns Ofici√°lny n√°zov pre protokoly (napr. "P2 invest s.r.o.")
 */
function getProtocolCompanyDisplay(internalCompanyName) {
    if (!internalCompanyName) {
        return 'N/A';
    }
    // Ak existuje mapovanie, pou≈æi≈• ofici√°lny n√°zov
    const officialName = COMPANY_PROTOCOL_MAPPING[internalCompanyName];
    if (officialName) {
        console.log(`üìã Protocol mapping: "${internalCompanyName}" ‚Üí "${officialName}"`);
        return officialName;
    }
    // Inak pou≈æi≈• p√¥vodn√Ω n√°zov
    return internalCompanyName;
}
/**
 * Text zast√∫penia ktor√Ω sa zobrazuje na ka≈ædom protokole
 */
exports.PROTOCOL_REPRESENTATIVE = 'v zast√∫pen√≠ spoloƒçnos≈•ou Black Holding s.r.o. na z√°klade plnej moci';
/**
 * Pridanie sekcie zast√∫penia do protokolu (helper pre PDF gener√°tory)
 */
function getRepresentativeSection() {
    return [
        ['Zast√∫penie:', exports.PROTOCOL_REPRESENTATIVE]
    ];
}
/**
 * Z√≠skanie kompletn√Ωch inform√°ci√≠ o firme pre protokol
 */
function getProtocolCompanyInfo(internalCompanyName) {
    return {
        displayName: getProtocolCompanyDisplay(internalCompanyName),
        representative: exports.PROTOCOL_REPRESENTATIVE,
        internalName: internalCompanyName
    };
}
//# sourceMappingURL=protocol-helpers.js.map