-- ‚úÖ F√ÅZA 1.1: Timezone Fix - Zmena expense.date z TIMESTAMP na DATE
-- T√°to migr√°cia odstr√°ni timezone konverzie z expense d√°tumov
-- D√°tum 15.01.2025 zostane 15.01.2025 bez ohƒæadu na timezone

BEGIN;

-- 1. Backup aktu√°lnych d√°t (pre istotu)
CREATE TEMP TABLE expenses_backup_timezone_fix AS 
SELECT * FROM expenses;

-- 2. Zmena typu stƒ∫pca z TIMESTAMP na DATE
-- Toto odstr√°ni ƒças a timezone, ponech√° len d√°tum
ALTER TABLE expenses 
  ALTER COLUMN date TYPE DATE 
  USING date::DATE;

-- 3. Verify ≈æe migr√°cia prebehla spr√°vne
DO $$
DECLARE
  date_type text;
BEGIN
  SELECT data_type INTO date_type
  FROM information_schema.columns
  WHERE table_name = 'expenses' AND column_name = 'date';
  
  IF date_type != 'date' THEN
    RAISE EXCEPTION 'Migration failed - date column is still type %, expected date', date_type;
  END IF;
  
  RAISE NOTICE '‚úÖ Migration successful - expenses.date is now DATE type (no timezone)';
END $$;

-- 4. Rovnak√° zmena pre recurring_expenses (snake_case stƒ∫pce!)
ALTER TABLE recurring_expenses
  ALTER COLUMN start_date TYPE DATE 
  USING start_date::DATE;

ALTER TABLE recurring_expenses
  ALTER COLUMN end_date TYPE DATE 
  USING end_date::DATE;

ALTER TABLE recurring_expenses
  ALTER COLUMN last_generated_date TYPE DATE 
  USING last_generated_date::DATE;

ALTER TABLE recurring_expenses
  ALTER COLUMN next_generation_date TYPE DATE 
  USING next_generation_date::DATE;

-- 5. Verify recurring_expenses
DO $$
DECLARE
  start_date_type text;
  end_date_type text;
BEGIN
  SELECT data_type INTO start_date_type
  FROM information_schema.columns
  WHERE table_name = 'recurring_expenses' AND column_name = 'start_date';
  
  SELECT data_type INTO end_date_type
  FROM information_schema.columns
  WHERE table_name = 'recurring_expenses' AND column_name = 'end_date';
  
  IF start_date_type != 'date' OR end_date_type != 'date' THEN
    RAISE EXCEPTION 'Migration failed for recurring_expenses';
  END IF;
  
  RAISE NOTICE '‚úÖ Recurring expenses dates migrated successfully';
END $$;

-- 6. Anal√Ωza tabuliek pre lep≈°√≠ performance
ANALYZE expenses;
ANALYZE recurring_expenses;

COMMIT;

-- üìä V√Ωsledok:
-- expenses.date: TIMESTAMP WITH TIME ZONE ‚Üí DATE
-- recurring_expenses d√°tumy: TIMESTAMP WITH TIME ZONE ‚Üí DATE
-- 
-- Pr√≠klad:
-- PRED: "2025-01-15T00:00:00.000Z" (UTC timezone)
-- PO:   "2025-01-15" (len d√°tum, bez ƒçasu a timezone)
--
-- ‚úÖ D√°tumy sa u≈æ nebud√∫ meni≈• pri edit√°cii!

