# Railway Dockerfile s Puppeteer podporou
FROM node:18-bullseye-slim

# Install system dependencies pre Puppeteer a Chrome
RUN apt-get update && apt-get install -y \
    wget \
    gnupg \
    ca-certificates \
    procps \
    libxss1 \
    libgconf-2-4 \
    libxrandr2 \
    libasound2 \
    libpangocairo-1.0-0 \
    libatk1.0-0 \
    libcairo-gobject2 \
    libgtk-3-0 \
    libgdk-pixbuf2.0-0 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxi6 \
    libxtst6 \
    libnss3 \
    libcups2 \
    libxrandr2 \
    libasound2 \
    libpangocairo-1.0-0 \
    libatk1.0-0 \
    libcairo-gobject2 \
    libdrm2 \
    libxkbcommon0 \
    libatspi2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Install Google Chrome Stable
RUN wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
    && apt-get update \
    && apt-get install -y google-chrome-stable \
    && rm -rf /var/lib/apt/lists/*

# Set working directory for backend
WORKDIR /app

# Copy and install backend dependencies
COPY backend/package*.json ./

# Install dependencies (s Puppeteer pre Railway)
RUN npm cache clean --force
RUN npm install --only=production

# Install Sentry explicitly
RUN npm install @sentry/node@^7.88.0 @sentry/tracing@^7.88.0 || true

# Puppeteer environment variables
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/google-chrome-stable

# Verify Puppeteer installation
RUN node -e "const puppeteer = require('puppeteer'); console.log('‚úÖ Puppeteer loaded successfully');" || echo "‚ùå Puppeteer not available"

# Copy backend source
COPY backend/src/ ./src/
COPY backend/tsconfig.json ./tsconfig.json

# Build backend TypeScript
RUN npm run build

# List installed packages for debugging
RUN echo "üìã Installed packages:" && npm list --depth=0 | head -20

# Create public directory for frontend files
RUN mkdir -p ./dist/public

# Set production environment
ENV NODE_ENV=production

# Set PDF generator na Puppeteer (najlep≈°√≠)
ENV PDF_GENERATOR_TYPE=puppeteer

# Expose port
EXPOSE 8080

# Start the application
CMD ["npm", "start"] 
