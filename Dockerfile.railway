# Railway Dockerfile s Puppeteer podporou
FROM node:18-bullseye-slim

# Install system dependencies for Puppeteer
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    fonts-liberation \
    libappindicator3-1 \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libexpat1 \
    libfontconfig1 \
    libgcc1 \
    libgconf-2-4 \
    libgdk-pixbuf2.0-0 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    lsb-release \
    wget \
    xdg-utils \
    && rm -rf /var/lib/apt/lists/*

# Install Chromium (lighter alternative to Chrome)
RUN apt-get update && apt-get install -y chromium \
    && rm -rf /var/lib/apt/lists/*

# Set working directory for backend
WORKDIR /app

# Copy and install backend dependencies first - with better caching
COPY backend/package*.json ./

# Clear npm cache and install dependencies explicitly
RUN npm cache clean --force
RUN npm install --only=production

# Install Puppeteer explicitly and skip Chromium download (we installed Chrome)
RUN npm install puppeteer@^23.9.0
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true

# Install Sentry
RUN npm install @sentry/node@^7.88.0 @sentry/tracing@^7.88.0 || true

# Verify critical dependencies are installed
RUN node -e "require('@sentry/node'); console.log('‚úÖ @sentry/node loaded successfully');" || echo "‚ùå Sentry still not available"
RUN node -e "require('puppeteer'); console.log('‚úÖ Puppeteer loaded successfully');" || echo "‚ùå Puppeteer not available"

# Copy backend source
COPY backend/src/ ./src/
COPY backend/tsconfig.json ./tsconfig.json

# Build backend TypeScript
RUN npm run build

# List installed packages for debugging
RUN echo "üìã Installed packages:" && npm list --depth=0 | head -20

# Create public directory for frontend files
RUN mkdir -p ./dist/public

# Set production environment
ENV NODE_ENV=production

# Expose port
EXPOSE 8080

# Health check - removed as it was using wrong endpoint
# Railway will use healthcheckPath from railway.json instead

# Set Puppeteer environment variables for Chromium
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium

# Start the application
CMD ["npm", "start"] 