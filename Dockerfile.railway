# Jednoduchy Dockerfile pre Railway s vylep≈°enou dependency instal√°ciou
FROM node:18-bullseye-slim

# Install curl for healthcheck
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Set working directory for backend
WORKDIR /app

# Copy and install backend dependencies first - with better caching
COPY backend/package*.json ./

# Clear npm cache and install dependencies explicitly
RUN npm cache clean --force
RUN npm install --only=production
RUN npm list @sentry/node || echo "Sentry not found, installing explicitly..."
RUN npm install @sentry/node@^7.88.0 @sentry/tracing@^7.88.0 || true

# Verify critical dependencies are installed
RUN node -e "require('@sentry/node'); console.log('‚úÖ @sentry/node loaded successfully');" || echo "‚ùå Sentry still not available"

# Copy backend source
COPY backend/src/ ./src/
COPY backend/tsconfig.json ./tsconfig.json

# Build backend TypeScript
RUN npm run build

# List installed packages for debugging
RUN echo "üìã Installed packages:" && npm list --depth=0 | head -20

# Create public directory for frontend files
RUN mkdir -p ./dist/public

# Set production environment
ENV NODE_ENV=production

# Expose port
EXPOSE 8080

# Health check - removed as it was using wrong endpoint
# Railway will use healthcheckPath from railway.json instead

# Start the application
CMD ["npm", "start"] 